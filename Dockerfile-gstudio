# set the base image to registry.tiss.edu/gstudiobase
FROM registry.tiss.edu/gstudiobase

# file Author / Maintainer to Mrunal 
MAINTAINER mrunal@gnowledge.org

RUN curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -     \
    && apt-get install -y nodejs

# create code directory as it can't find dirctory while coping
RUN mkdir -p /home/docker/code/     /data/db    /data/rcs-repo      /data/media     /data/system-heartbeat    /data/postgres-dump    /softwares   

# # install our code
# ADD . /home/docker/code/ 

# change the working directory to "/home/docker/code"
WORKDIR "/home/docker/code/" 


# install qbank-gstudio-scripts code and pip install to install pip related required packages as per requirements.txt
RUN git clone https://743e4ddc106b7b2cf402bbf802cae683b0aa62de@github.com/CLIxIndia-Dev/qbank-gstudio-scripts.git  \
    &&  pip install -r /home/docker/code/qbank-gstudio-scripts/single_school_get_MIT_activity_data/requirements.txt


# install gstudio docker code
RUN git clone https://743e4ddc106b7b2cf402bbf802cae683b0aa62de@github.com/mrunal4/gstudio-docker.git  \
    &&  rsync -avPh --include="/*/" --include="*/.*" --include="*" gstudio-docker/  .   \ 
    &&  rm -rf gstudio-docker


# install gstudio app code, reset code to given commit no, pip install to install pip related required packages as per requirements.txt, and bower install
RUN git clone -b master https://743e4ddc106b7b2cf402bbf802cae683b0aa62de@github.com/gnowledge/gstudio.git  \
    &&  cd gstudio && git reset --hard $commitid && cd ..   \
    &&  pip install -r /home/docker/code/gstudio/requirements.txt   \
    &&  cd /home/docker/code/gstudio/gnowsys-ndf/   \
    &&  bower install --allow-root


# Clone dlkit repos at manage.py level
RUN cd /home/docker/code/gstudio/gnowsys-ndf/   \
   &&  git clone https://bitbucket.org/cjshaw/dlkit_runtime.git   \
   &&  git clone https://bitbucket.org/cjshaw/dlkit.git   \
   &&  cd dlkit   \
   &&  git submodule update --init --recursive


# Clone qbank repos at manage.py level
RUN cd /home/docker/code/gstudio/gnowsys-ndf/   \
    &&  git clone -b clixserver.tiss.edu https://github.com/gnowledge/qbank-lite.git   \
    &&  cd qbank-lite   \
    &&  git submodule update --init --recursive   


# Clone OpenAssessmentsClient repos at gstudio level
RUN cd /home/docker/code/   \
    &&  git clone -b clixserver.tiss.edu https://github.com/gnowledge/OpenAssessmentsClient.git   \
    &&  mkdir -p /home/docker/code/gstudio/gnowsys-ndf/qbank-lite/webapps/CLIx/datastore/repository/AssetContent    /home/docker/code/gstudio/gnowsys-ndf/qbank-lite/webapps/CLIx/datastore/studentResponseFiles   \
    &&  cd OpenAssessmentsClient   \
#   &&  npm build    \
    &&  yarn   \
    &&  yarn build   \
    &&  mkdir -p /softwares/oac /softwares/oat   \
    &&  cp -av /home/docker/code/OpenAssessmentsClient/build/prod/* /softwares/oac/   \
    &&  cp -av /home/docker/code/OpenAssessmentsClient/build/prod/* /softwares/oat/   \
    &&  cp -av /softwares/oat/author.html /softwares/oat/index.html


# backup all scripts, confs and restore schema dump (restore factory dump)
RUN mkdir /root/.backup_defaults   \
    &&  cp -av /home/docker/code/confs /home/docker/code/scripts /home/docker/code/Dockerfile /home/docker/code/AUTHORS /home/docker/code/README.md /root/.backup_defaults/   \
    &&  rm -rf /home/docker/code/schema_dump/data
   

# checking the present working directory and copying of configfiles : {copying the '.emacs' file in /root/ } , {copying the 'maintenance' files in /home/docker/code/gstudio/gnowsys-ndf/gnowsys_ndf/ndf/templates/ } , {copying wsgi file to appropriate location}, {copying postgresql conf file to appropriate location} , 
RUN pwd  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}    \
   &&  cp -v /home/docker/code/confs/emacs /root/.emacs  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}    \
   &&  cp -v /home/docker/code/maintenance/maintenance* /home/docker/code/gstudio/gnowsys-ndf/gnowsys_ndf/ndf/templates/  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}    \
   &&  cp -v /home/docker/code/gstudio/gnowsys-ndf/gnowsys_ndf/wsgi.py /home/docker/code/gstudio/gnowsys-ndf/wsgi.py  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}    \
   &&  rm /etc/postgresql/9.3/main/postgresql.conf  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}    \
   &&  cp -v /home/docker/code/confs/local_settings.py.default /home/docker/code/gstudio/gnowsys-ndf/gnowsys_ndf/local_settings.py   \
   &&  cat /home/docker/code/confs/bash_compl >> /root/.bashrc   | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}    
   
# setup all the configfiles (nginx, supervisord and postgresql)
RUN echo "daemon off;" >> /etc/nginx/nginx.conf   \
   &&  rm /etc/nginx/sites-enabled/default  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}   \
   &&  mv -v /etc/nginx/nginx.conf /tmp/  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}   \
   &&  ln -s /home/docker/code/confs/nginx.conf /etc/nginx/  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}   \
   &&  ln -s /home/docker/code/confs/nginx-app.conf /etc/nginx/sites-enabled/  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}   \
   &&  ln -s /home/docker/code/confs/supervisor-app.conf /etc/supervisor/conf.d/  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}   \
   &&  ln -s /home/docker/code/confs/postgresql.conf /etc/postgresql/9.3/main/  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}    \
   &&  mv -v /etc/mailname /tmp/  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}   \
   &&  ln -s /home/docker/code/confs/mailname /etc/mailname  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}   \
   &&  mv -v /etc/postfix/main.cf /tmp/  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}   \
   &&  ln -s /home/docker/code/confs/main.cf /etc/postfix/  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}   \
   &&  ln -s /home/docker/code/confs/sasl_passwd /etc/postfix/  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}   \
   &&  ln -s /home/docker/code/confs/sasl_passwd.db /etc/postfix/  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}   

# remove all deb packages
RUN echo "Size of deb packages files : "  du -hs  /var/cache/apt/archives/   \
   &&  ls -ltr  /var/cache/apt/archives/   \
   &&  du -hs  /var/cache/apt/archives/*   \
   &&  rm -rf /var/cache/apt/archives/*.deb

# Set necessary permissions to mongodb data directory (/data/db)
RUN mkdir -p /data/db && chown -R mongodb:mongodb /data/db  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}

# Set volumes
VOLUME /data 
VOLUME /backups
VOLUME /softwares
VOLUME /home/docker/code/gstudio/gnowsys-ndf/qbank-lite/webapps/CLIx/datastore

# Exposing the ports - {ssh} , {smtp} , {https (with ssl)} , {http} , {for developement user (Developer)} , {smtpd command (to test mail machanism locally)} , {imap : gnowledge} , {smtp : gnowledge} , {mongodb}
RUN echo "EXPOSE  22  25  80  443  8000  8080  1025  143  587  27017  5555"  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}
EXPOSE  22  25  80  443  8000  8080  1025  143  587  27017  5555

# {change this line for your timezone} and {nltk installation and building search base} and {creation of schema_files directory}
RUN ln -sf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}   \
   &&  pip install -U pyyaml nltk  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}   \
   &&  /home/docker/code/scripts/nltk-initialization.py  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}   \
   &&  mkdir /home/docker/code/gstudio/gnowsys-ndf/gnowsys_ndf/ndf/management/commands/schema_files  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /" 2>&1 | tee -a ${LOG_INSTALL_DOCKER}

# Restore default postgres database
RUN /etc/init.d/postgresql start   \
   &&  echo "psql -f /data/pgdata.sql;" | sudo su - postgres    \
   &&  crontab /home/docker/code/confs/mycron    \
   &&  rm /etc/rc.local    \
   &&  /etc/init.d/rc.local start    \
   &&  ln -s /home/docker/code/confs/rc.local /etc/    \
   &&  /etc/init.d/postgresql start

# Perform collectstatic
RUN echo yes | /usr/bin/python /home/docker/code/gstudio/gnowsys-ndf/manage.py collectstatic

CMD /home/docker/code/scripts/initialize.sh  | sed -e "s/^/$(date +%Y%m%d-%H%M%S) :  /"  2>&1 | tee -a ${LOG_INSTALL_DOCKER}
